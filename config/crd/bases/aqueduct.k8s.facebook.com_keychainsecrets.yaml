
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: keychainsecrets.aqueduct.k8s.facebook.com
spec:
  group: aqueduct.k8s.facebook.com
  names:
    kind: KeychainSecret
    listKind: KeychainSecretList
    plural: keychainsecrets
    singular: keychainsecret
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: KeychainSecret is the Schema for the keychainsecrets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KeychainSecretSpec defines the desired state of KeychainSecret
            properties:
              group:
                description: Group is the name of the Keychain group the secret exist
                  in. It is optional as not all secrets exit in a group.
                maxLength: 150
                minLength: 1
                pattern: ^[A-Z0-9_]+$
                type: string
              name:
                description: Name is the name of the Keychain secret.
                maxLength: 150
                minLength: 1
                pattern: ^[A-Z0-9_]+$
                type: string
              ttl:
                default: 24h
                description: TTL is how often this secret should be updated (for rotation
                  purposes). It is a golang Duration, and we use a regex to validate
                  it. Note that only seconds (s), minutes (m), or hours (h) are allowed
                  because durations involving days or years may be ambiguous due to
                  differences in locales. See https://github.com/golang/go/issues/17767
                  for the "official" rational...
                pattern: ^[0-9]+[smh]$
                type: string
            required:
            - name
            type: object
          status:
            description: KeychainSecretStatus defines the observed state of KeychainSecret
            properties:
              lastUpdate:
                description: LastUpdate is the time we updated this secret. It is
                  a fixed, portable, seriallized version of the golang type https://golang.org/pkg/time/#Time
                format: date-time
                type: string
              message:
                description: Message is human-readable string indicating details about
                  the last update.
                type: string
              reason:
                description: Reason is a brief CamelCase string that describes any
                  failure and is meant for machine parsing and tidy display in the
                  CLI.
                type: string
              secretRef:
                description: SecretRef is a reference to the Secret this KeychainSecret
                  created and maintains.
                properties:
                  name:
                    description: Name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
